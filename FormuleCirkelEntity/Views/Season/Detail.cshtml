@model FormuleCirkelEntity.Models.Season

@{
    ViewData["Title"] = "Seizoen " + Model.SeasonId;
}
<section class="row my-1">
    <header>
        <h1>Seizoen: @Model.SeasonId</h1>
    </header>
</section>

<section class="row btn-group my-1">
    @if (Model.State == SeasonState.Draft)
    {
        <a asp-action="Start" asp-route-id="@Model.SeasonId" class="btn btn-dark btn-info">Start seizoen!</a>
    }
    @if (Model.State == SeasonState.Progress)
    {
        <a asp-action="Finish" asp-route-id="@Model.SeasonId" class="btn btn-dark btn-info">Eindig seizoen!</a>
    }
    <a asp-controller="Races" asp-action="AddTracks" asp-route-id="@Model.SeasonId" class="btn btn-dark">Races toevoegen</a>
    <a asp-action="AddDrivers" asp-route-id="@Model.SeasonId" class="btn btn-dark">Coureurs toevoegen</a>
    <a asp-action="AddTeams" asp-route-id="@Model.SeasonId" class="btn btn-dark">Teams toevoegen</a>
</section>

<section class="row my-1">
    <header>
        <h3>Coureurs</h3>
    </header>
    <table class="table table-sm">
        <thead>
            <tr>
                <th>#</th>
                <th>Punten</th>
                <th>Coureur</th>
                <th>Vaardigheid</th>
                <th>Stijl</th>
                <th>Banden</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                var orderedDrivers = Model.Drivers.OrderByDescending(d => d.Points).ToList();
                for (int pos = 0; pos < orderedDrivers.Count; pos++)
                {
                    SeasonDriver @driver = orderedDrivers[pos];
                    <tr>
                        <td>@((pos + 1).ToString())</td>
                        <td>@driver.Points</td>
                        <td><span class="badge nofullwidth">@driver.Driver.DriverNumber</span> @driver.Driver.Name</td>
                        <td>@driver.Skill</td>
                        <td>@driver.Style</td>
                        <td>@driver.Tires</td>
                        <td>
                            <a asp-action="UpdateDriver" asp-route-id="@Model.SeasonId" asp-route-driverId="@driver.SeasonDriverId">
                                <img src="~/images/icon-edit.png" width="30" height="30" title="Edit" />
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <a asp-action="DriverDev" asp-route-id="@Model.SeasonId" class="btn btn-dark">Ontwikkeling coureurs</a>
</section>

<section class="row my-1">
    <header>
        <h3>Races</h3>
    </header>
    <table id="races" class="table table-sm">
        <thead>
            <tr>
                <th data-field="name">Naam</th>
                <th data-field="round">Ronde</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var race in Model.Races.OrderBy(r => r.Round))
            {
                <tr data-obj-id="@race.RaceId">
                    <td data-field="name">@race.Name</td>
                    <td data-field="round">@race.Round</td>
                    <td>
                        <a asp-controller="Races" asp-action="RacePreview" asp-route-id="@Model.SeasonId" asp-route-raceId="@race.RaceId">
                            <img src="~/images/icon-raceflag.png" width="30" height="30" title="Race" />
                        </a>
                    </td>
                    <td>
                        <a class="badge badge-secondary cursor-pointer" onclick="moveRound(@Model.SeasonId, @race.RaceId, -1)">Omhoog</a>
                        <a class="badge badge-secondary cursor-pointer" onclick="moveRound(@Model.SeasonId, @race.RaceId, 1)">Omlaag</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>

<section class="row my-1">
    <header>
        <h3>Teams</h3>
    </header>
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Punten</th>
                <th>Team</th>
                <th>Chassis</th>
                <th>Betrouwbaarheid</th>
                <th>Motor</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                var orderedTeams = Model.Teams.OrderByDescending(t => t.Points).ToList();
                for (int pos = 0; pos < orderedTeams.Count; pos++)
                {
                    SeasonTeam team = orderedTeams[pos];
                    <tr>
                        <td>@((pos + 1).ToString())</td>
                        <td>@team.Points</td>
                        <td>
                            <span class="badge" style="background-color:@(team.Team.Colour);color:@(team.Team.Accent);font-size:1rem;">@team.Team.Name</span>
                        </td>
                        <td>@team.Chassis</td>
                        <td>@team.Reliability</td>
                        <td>@team.Engine.Name</td>
                        <td>
                            <a asp-action="UpdateTeam" asp-route-id="@Model.SeasonId" asp-route-teamId="@team.SeasonTeamId">
                                <img src="~/images/icon-edit.png" width="30" height="30" title="Edit" />
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div class="row btn-group my-1">
        <a asp-action="TeamDev" asp-route-id="@Model.SeasonId" class="btn btn-dark">Ontwikkeling teams</a>
        <a asp-action="EngineDev" asp-route-id="@Model.SeasonId" class="btn btn-dark">Ontwikkeling motoren</a>
    </div>
</section>

<script>
    function updateRaces(races) {
        const table = document.querySelector('#races');
        const tableBody = table.querySelector("tbody");

        races.forEach((race) => {
            let row = tableBody.querySelector(`tr[data-obj-id='${race.raceId}']`);
            row.querySelector("td[data-field='round']").innerHTML = race.round;
        });

        let th = table.querySelector("th[data-field='round']")
        let tableRows = tableBody.querySelectorAll("tr:nth-child(n+1)")
        Array.from(tableRows)
            .sort(tableComparer(Array.from(th.parentNode.children).indexOf(th), true))
            .forEach(tr => table.querySelector("tbody").appendChild(tr));
    }

    function handleError(errorData) {
        alert(errorData.message);
    }

    function moveRound(season, race, direction) {
        fetch(`/Season/${season}/Races/${race}/round?direction=${direction}`, { method: "POST" })
            .then(response => response.status == 200 ? Promise.resolve(response) : Promise.reject(response))
            .then(response => response.json())
            .then(data => updateRaces(data))
            .catch(err => err.json().then(err => handleError(err)));
    }
</script>