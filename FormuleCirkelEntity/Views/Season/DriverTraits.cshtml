@model FormuleCirkelEntity.ViewModels.SeasonTraitsDriverModel

@{
    ViewData["Title"] = "Traits for driver";
}

<div class="d-inline-block w-60">
    <h1>Traits for @Model.Driver.Driver.Name</h1>

    <div class="col">
        <h3>Applied traits</h3>
        <table class="ctable fullborder fullwidth">
            <thead class="fullborder">
                <tr>
                    <th class="w-20">
                        Trait
                    </th>
                    <th class="w-60">
                        Description
                    </th>
                    <th class="w-10">Info</th>
                    <th class="w-10"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var trait in Model.Driver.Traits.Values)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => trait.Name)
                        </td>
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => trait.TraitDescription)
                        </td>
                        <td>
                            <a asp-controller="Traits" asp-action="Info" asp-route-id="@trait.TraitId"><i class="fas fa-info-circle fa-2x"></i></a>
                        </td>
                        <td>
                            <a asp-action="RemoveDriverTrait" asp-route-driverId="@Model.Driver.SeasonDriverId" asp-route-traitId="@trait.TraitId" class="btn fullwidth">Remove</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <h3>Add traits</h3>
        <div class="row justify-content-between mb-1">
            <form method="POST">
                <input id="randomInput" type="hidden" name="traitId" />
                <input id="randomSubmit" type="submit" class="btn fullwidth" value="Random" />
            </form>
            <a asp-controller="Traits" asp-action="Create" class="btn ml-auto">New trait</a>
        </div>
        @if (Model.Traits.Any())
        {
            <table class="ctable fullborder fullwidth">
                <thead>
                    <tr>
                        <th class="w-20">
                            Trait
                        </th>
                        <th class="w-60">
                            Description
                        </th>
                        <th class="w-10">Info</th>
                        <th class="w-10"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var trait in Model.Traits)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => trait.Name)
                            </td>
                            <td class="text-left">
                                @Html.DisplayFor(modelItem => trait.TraitDescription)
                            </td>
                            <td>
                                <a asp-controller="Traits" asp-action="Info" asp-route-id="@trait.TraitId"><i class="fas fa-info-circle fa-2x"></i></a>
                            </td>
                            <td>
                                <form method="POST">
                                    <input type="hidden" name="traitId" value="@trait.TraitId" />
                                    <input type="submit" class="btn fullwidth" value="Add" />
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h4>There are no traits available for this driver!</h4>
        }
    </div>

    <div class="float-left">
        <a asp-action="Detail" asp-route-id="@Model.Driver.SeasonId">
            <i class="fas fa-arrow-alt-circle-left fa-2x"></i>
        </a>
    </div>
</div>

<script>
    window.onload = function () {
        var traits = @(Json.Serialize(Model.Traits.Select(t => t.TraitId)));

        if (traits.length == 0) {
            document.getElementById("randomSubmit").style.display = "none";
        }
        else {
            const randomId = traits[Math.floor(Math.random() * traits.length)];
            document.getElementById("randomInput").value = randomId;
        }
    }
</script>