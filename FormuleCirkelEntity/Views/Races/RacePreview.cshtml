@model FormuleCirkelEntity.Models.Race

@{
    ViewData["Title"] = "Preview";
    int minRNGMod = 0;
    int maxRNGMod = 0;
}

<div id="graphic">
    <h1>Preview of @Model.Name</h1>
    <hr />
    <div>
        <dl class="row">
            <dt class="col-sm-2">
                Round
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Round)
            </dd>
            <dt class="col-sm-2">
                Location
            </dt>
            <dd class="col-sm-10">
                @(Model.Track.Location)
            </dd>
            <dt class="col-sm-2">
                Track
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Track.Name)
            </dd>
            <dt class="col-sm-2">
                Specification
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Track.Specification)
            </dd>
            <dt class="col-sm-2">
                Weather
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Weather)
                <span><i id="weather"></i></span>
            </dd>
        </dl>
        @if (Model.Track.Traits.Any())
        {
            <h5>Traits</h5>
            <ul>
                @foreach (var trait in Model.Track.Traits.Values)
                {
                    <li><strong>@trait.Name:</strong>  @trait.TraitDescription</li>
                    if (trait.MinimumRNG.HasValue) { minRNGMod += trait.MinimumRNG.Value; }
                    if (trait.MaximumRNG.HasValue) { maxRNGMod += trait.MaximumRNG.Value; }
                }
            </ul>
        }
    </div>
    
    <hr />
    <table class="table table-bordered table-dark table-sm">
        <thead>
            <tr>
                <th>#</th>
                <th>Chassis</th>
                <th>Engine</th>
                <th>Driver</th>
                <th>Qualy bonus</th>
                <th>Tire bonus</th>
                <th>Tire wear</th>
                <th>Reliability</th>
                <th>RNG min.</th>
                <th>RNG max.</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stint in Model.Stints)
            {
                <tr>
                    <td>@stint.Key</td>
                    <td>
                        @if (stint.Value.ApplyChassisLevel)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyEngineLevel)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyDriverLevel)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyQualifyingBonus)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyTireLevel)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyTireWear)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    <td>
                        @if (stint.Value.ApplyReliability)
                        {<span class="badge badge-success nofullwidth">✓</span>}
                    </td>
                    @if (stint.Value.RNGMaximum > 0)
                    {
                        <td>@(stint.Value.RNGMinimum + minRNGMod)</td>
                        <td>@(stint.Value.RNGMaximum + maxRNGMod)</td>
                    } else
                    {
                        <td>@(stint.Value.RNGMinimum)</td>
                        <td>@(stint.Value.RNGMaximum)</td>
                    }

                </tr>
            }
        </tbody>
    </table>
    <table class="table table-sm">
        <thead>
            <tr>
                <th colspan="3">Favourites</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var team in ViewBag.favourites)
            {
                <tr>
                    <td>@(team.Principal)</td>
                    <td><span class="badge" style="background-color:@(team.Team.Colour);color:@(team.Team.Accent);font-size:1rem;">@(team.Team.Name)</span></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <form asp-action="RacePreview">
        <div class="form-group">
            <input asp-action="RaceStart" asp-route-id="@Model.SeasonId" asp-route-raceId="@Model.RaceId" type="submit" value="Raceweekend" class="btn btn-dark" />
        </div>
    </form>
    <button class="btn ml-auto" onclick="takeScreenshot('#graphic', '#screenshot')"><i class="fas fa-image fa-2x"></i></button>
</div>
<br />

<div id="screenshot"></div>

@Html.Raw(TempData["msg"])

<script>
    $(function () {
        var weatherclass = "";
        switch ("@Model.Weather") {
            case "Sunny":
                weatherclass = "fas fa-sun";
                break;
            case "Overcast":
                weatherclass = "fas fa-cloud";
                break;
            case "Rain":
                weatherclass = "fas fa-cloud-rain";
                break;
            case "Storm":
                weatherclass = "fas fa-cloud-moon-rain";
                break;
        }
        $("#weather").addClass(weatherclass);
    });
</script>