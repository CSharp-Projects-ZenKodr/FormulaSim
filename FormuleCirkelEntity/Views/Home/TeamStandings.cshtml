@model IEnumerable<FormuleCirkelEntity.Models.SeasonTeam>

@{
    ViewData["Title"] = "Stand";
    var rounds = ViewBag.rounds;
    var drivers = ViewBag.drivers;
    int position = 1;
    var track = "";
}

<h1>Kampioenschap teams</h1>


<table id="graphic" class="table table-sm">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                Team
            </th>
            @foreach (var round in rounds)
            {
                <th>@(track = round.Track.Location.Substring(0, 3).ToUpper())</th>
            }
            <th>
                Pnt.
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @position
                </td>
                <td>
                    <span class="badge" style="background-color:@(item.Team.Colour);color:@(item.Team.Accent);font-size:1rem;">@item.Team.Name</span>
                </td>
                @foreach (var round in rounds)
                {
                    <td>
                        @foreach (var driver in item.SeasonDrivers)
                        {
                            DriverResult result = driver.DriverResults.FirstOrDefault(r => r.Race.Round == round.Round);
                            if (result == null || result.Position == 0)
                            {
                                <span>-</span>
                            }
                            else
                            {
                                if (result.Status == Status.DNF)
                                {
                                    <span class="badge badge-danger">DNF</span>
                                } else if(result.Position == 1)
                                {
                                    <span class="badge badge-first">@result.Position</span>
                                } else if(result.Position == 2)
                                {
                                    <span class="badge badge-second">@result.Position</span>
                                } else if(result.Position == 3)
                                {
                                    <span class="badge badge-third">@result.Position</span>
                                } else if(result.Position <= 12)
                                {
                                    <span class="badge badge-success">@result.Position</span>
                                }
                                else
                                {
                                    <span class="badge badge-primary">@result.Position</span>
                                }
                            }
                        }
                    </td>
                }
                <td>
                    <span class="badge">@Html.DisplayFor(modelItem => item.Points)</span>
                </td>
            </tr>
            position++;
        }
    </tbody>
</table>

<button class="btn badge-dark" onclick="takeScreenshot()"><i class="fas fa-image"></i></button>

<div id="screenshot"></div>

<style>
    .badge {
        font-size: 0.85rem;
    }
</style>

<script>
    function takeScreenshot() {
        html2canvas(document.querySelector('#graphic')).then(function (canvas) {
            $('#screenshot').empty();
            document.querySelector('#screenshot').appendChild(canvas);
        });
    }
</script>