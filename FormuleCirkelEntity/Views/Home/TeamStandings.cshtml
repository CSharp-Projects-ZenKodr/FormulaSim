@model IEnumerable<FormuleCirkelEntity.Models.SeasonTeam>

@{
    ViewData["Title"] = "Stand";
    var rounds = ViewBag.rounds;
    var drivers = ViewBag.drivers;
    int position = 1;
    var track = "";
}

<h1>Kampioenschap teams</h1>


<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th>
                #
            </th>
            <th>
                Team
            </th>
            @foreach (var round in rounds)
            {
                <th>@(track = round.Track.Location.Substring(0, 3).ToUpper())</th>
            }
            <th>
                Punten
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @position
                </td>
                <td>
                    <div class="badge" style="background-color:@(item.Team.Colour);color:@(item.Team.Accent);font-size:1rem;">@item.Team.Name</div>
                </td>
                @foreach (var round in rounds)
                {
                    <td>
                        @foreach (var driver in item.SeasonDrivers)
                        {
                            DriverResult result = driver.DriverResults.FirstOrDefault(r => r.Race.Round == round.Round);
                            if (result == null || result.Position == 0)
                            {
                                <div class="badge badge-light">?</div>
                            }
                            else
                            {
                                if (result.Status == Status.DNF)
                                {
                                    <div class="badge badge-danger">DNF</div>
                                } else if(result.Position == 1)
                                {
                                    <div class="badge badge-first">@result.Position</div>
                                } else if(result.Position == 2)
                                {
                                    <div class="badge badge-second">@result.Position</div>
                                } else if(result.Position == 3)
                                {
                                    <div class="badge badge-third">@result.Position</div>
                                } else if(result.Position < 6)
                                {
                                    <div class="badge badge-success">@result.Position</div>
                                }
                                else
                                {
                                    <div class="badge badge-primary">@result.Position</div>
                                }
                            }
                        }
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Points)
                </td>
            </tr>
            position++;
        }
    </tbody>
</table>

<style>
    .badge {
        font-size: 0.85rem;
    }
</style>