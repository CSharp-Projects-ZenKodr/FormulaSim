@model FormuleCirkelEntity.ViewModels.DriverStatsModel

    @{
        ViewData["Title"] = "Driver bio";
    }

<div id="graphic">
    <h1>Biography</h1>
    <h4>@Model.DriverName</h4>
    <hr />
    <div class="biocontainer">
        <div class="fixed">
            <dl class="inline-flex">
                <dt>
                    Starts:
                </dt>
                <dd>
                    @Model.StartCount
                </dd>
                <dt>
                    Poles:
                </dt>
                <dd>
                    @Model.PoleCount
                </dd>
                <dt>
                    Podiums:
                </dt>
                <dd>
                    @Model.PodiumCount
                </dd>
                <dt>
                    Wins:
                </dt>
                <dd>
                    @Model.WinCount
                </dd>
                <dt>
                    WDCs:
                </dt>
                <dd>
                    @Model.WDCCount
                </dd>
                <dt>
                    DNFs:
                </dt>
                <dd>
                    @Model.DNFCount
                </dd>
                <dt>
                    DSQ:
                </dt>
                <dd>
                    @Model.DSQCount
                </dd>
                <dt>
                    Teams:
                </dt>
                <dd class="row">
                    @foreach (var team in Model.Teams)
                    {
                        <span class='badge' style='font-size:1rem;'>@(team.Abbreviation)</span>
                    }
                </dd>
            </dl>
        </div>
        <div class="flex-item">
            <p id="biography" contenteditable="true">
                @if (Model.DriverBio == null)
                {
                    <i>This driver has no bio yet!</i>
                }
                else
                {
                    @Model.DriverBio
                }
            </p>
            <button id="savebio" class="btn btn-dark"><i class="far fa-save"></i></button>
        </div>
    </div>
    <div class="row">
        <canvas id="FinishPercentage" width="250" height="250"></canvas>
        <canvas id="NonFinishCauses" width="250" height="250"></canvas>
    </div>
</div>

<div class="row">
    <a asp-action="Index">
        <i class="fas fa-arrow-alt-circle-left fa-2x"></i>
    </a>
    <button class="btn ml-auto" onclick="takeScreenshot('#graphic', '#screenshot')"><i class="fas fa-image fa-2x"></i></button>
</div>

<div id="screenshot"></div>

<script>
    $('#savebio').click(function () {
        $.ajax({
            type: "POST",
            url: "/Drivers/SaveBiography",
            data: { id: @Model.DriverId, biography: $("#biography").text() },
            dataType: "html",
            success: function () { alert("Biography saved!"); },
            error: function () { alert("Saving failed."); }
        });
    });

    $(function () {
        // Piechart for the sort of finishing results
        var ctx1 = document.getElementById('FinishPercentage').getContext('2d');
        var config1 = {
            type: 'pie',
        data: {
            datasets: [{
                data: [@Model.WinCount, @Model.PodiumCount, @Model.PointFinishCount, @Model.OutsideCount, @Model.DNFCount, @Model.DSQCount],
                backgroundColor: ['gold', 'silver', 'green', 'blue', 'red', 'black']
            }],
            labels: [
                'Wins',
                'Podiums',
                'Points',
                'Finished',
                'DNF',
                'DSQ'
            ]
            },
            options: {
                responsive: false
            }
        }
        var chart1 = new Chart(ctx1, config1);

        // Piechart to look into the sorts of DNFs / DSQs a driver has
        var ctx3 = document.getElementById('NonFinishCauses').getContext('2d');
        var config3 = {
            type: 'pie',
        data: {
            datasets: [{
                data: [@Model.AccidentCount, @Model.ContactCount, @Model.EngineCount, @Model.MechanicalCount, @Model.DSQCount],
                backgroundColor: ['purple', 'red', 'darkblue', 'grey', 'black']
            }],
            labels: [
                'Accident',
                'Contact',
                'Engine',
                'Mechanical',
                'DSQ'
            ]
            },
            options: {
                responsive: false
            }
        }
        var chart3 = new Chart(ctx3, config3);
    });
</script>